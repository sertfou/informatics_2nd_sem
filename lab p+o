#include <iostream>
#include <math.h>


using namespace std;


struct figure{
    int n;
    int lg;
    double S;
    int P;
    float x, y;

};


double S(int n, int lg, double S);
int Perimetr(int P, int lg, int n);
double coordinates(float x, float y, int lg, int n, float X[], float Y[]);
void input(figure *num);

int main()
{
    //figure num;
    int count;
    cout << "Enter count of figure:";
    cin >> count;
    figure *number;
    //cout << number;
    number = new figure[count];
    //cout << number << &number;
    //int x, y;
    int n;
    for (int iStruct = 0; iStruct < count; ++iStruct){
        input(&number[iStruct]);
    }
    float *X {new float[n]{}} ;
    float *Y {new float[n]{}};
//    Perimetr()
   // figure num[n];

    return 0;
}


double S(int n, int lg, double S){
    if (n==3){
        S = (double) pow((int) lg, 2)*sqrt(3)/4;
    }
    if (n==4){
        S = (double)pow((int) lg, 2);
    }
    if (n>4){
        S = (n*((double)pow((int) lg, 2)))/4*tan(3.14/n);
    }
    return S;

};


int Perimetr(int lg, int n){
    int P=lg*n;
    return P;
};


double coordinates(float x, float y, int lg, int n, float X[], float Y[]){
    float R = lg/(2*sin(3.14/n));

    for(int i=0; i<n-1; i++){
        X[i]= x+R*cos(6.28*i/n);
        Y[i]= y+R*sin(6.28*i/n);
    }
    for(int i=0; i<n-1; i++){
        cout<<"Point "<<i<<X[i]<<Y[i]<<endl;
    }
};


void input(figure *num){
    cout << "enter count of points " << endl;
    cin >> num->n;
    cout << "enter length " << endl;
    cin >> num->lg;
    cout << "enter coordinates " << endl;
    cin >> num->x>>num->y;
};
